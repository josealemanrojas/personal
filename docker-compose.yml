version: '3'
services:
  java-service:
    container_name: java-service
    image: local-java-service
    build:
      context: ./java-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_URL=jdbc:postgresql://postgres:5432/postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - SPRING_REDIS_HOST=cache
      - SPRING_REDIS_PORT=6379
      - MONGO_INITDB_DATABASE=test_db
      - MONGO_DB_USERNAME=root
      - MONGO_DB_PASSWORD=root
      - MONGO_DB_HOST=mongo_db
    depends_on:
      - postgres
      - cache
      - mongo
    volumes:
      - './java-service/src:/java-service/src'
      - './java-service/target:/java-service/target'
      - './java-service/pom.xml:/java-service/pom.xml'
      - './java-service/mvnw:/java-service/mvnw'
      - '~/.m2:/root/.m2'
    links:
      - cache
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  react-service:
    container_name: react-service
    image: local-react-service
    build:
      context: ./react-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - './react-service/src:/react-service/src'
  cache:
    image: redis:6.2-alpine
    hostname: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL

  mongo_db:
    image: mongo:4.4.3
    hostname: mongo
    container_name: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=test_db
      - MONGO_DB_USERNAME=root
      - MONGO_DB_PASSWORD=root
      - PORT=27017
    ports:
      - 27017:27017

volumes:
  postgres-data:
  cache:
    driver: local